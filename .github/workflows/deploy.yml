# GitHub workflow
name: Create and Publish package

on:
  push:
    branches: [ master ]

env:
  version: "0.1.${{github.run_number}}"  

jobs:

  build:   
    name: "build, pack & publish"
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v2
      
      #- name: Version
        #env:  
        #  Final_Version: $version.${{github.run_number}}
        #run: echo "Version $version"

      - name: Setup dotnet 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.200

      - name: MongoDB
        run: |
          dotnet build MongoDB/MongoDB.csproj --configuration Release
          #dotnet test $solution_file --configuration Release --no-build --filter "TestCategory!=SKIP_ON_DEPLOY & TestCategory!=REQUIRES_API_KEY & TestCategory!=AFFECTS_BALANCE"
          dotnet pack MongoDB/MongoDB.csproj --configuration Release --no-build -p:PackageVersion=$version
          dotnet nuget push MongoDB/bin/Release/*.nupkg  --api-key "${{secrets.NUGET_API_KEY}}" --source https://api.nuget.org/v3/index.json

      - name: Web API Hosting
        run: |
          dotnet build "Web API Hosting/Web API Hosting.fsproj" --configuration Release
          #tests
          dotnet pack "Web API Hosting/Web API Hosting.fsproj" --configuration Release --no-build -p:PackageVersion=$version -p:IncludeSymbols=false
          # due to bug in nuget that is looking for symbols (.snupkg files) use the exact package file name
          dotnet nuget push "Web API Hosting/bin/Release/Alex75.Common.WebApiHosting.$version.nupkg"  --api-key "${{secrets.NUGET_API_KEY}}" --source https://api.nuget.org/v3/index.json